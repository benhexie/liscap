/*! For license information please see liscap.min.js.LICENSE.txt */
var liscap;(()=>{var e={452:e=>{var r=new class{constructor(){this.maxListeners={},this.end=!1}addEventListener(e,r,t=(()=>{}),n={}){if(!(e instanceof HTMLElement))throw new Error("Invalid element");if(this.end)throw new Error("You cannot add more listeners");this.maxListeners[e]=(this.maxListeners[e]||0)+1,e.addEventListener=function(r){let t=0;const n=e.addEventListener;return function(s,o,i){if(t>=r[e])throw new Error("Max listeners exceeded");t++,n.call(this,s,o,i)}}(this.maxListeners),e.addEventListener(r,t,n)}removeEventListener(e,r,t,n){if(this.end)throw new Error("You cannot remove more listeners");e.removeEventListener(r,t,n)}lock(){this.end=!0}sayHello(){console.log("Hello from liscap")}};e.exports=r}},r={},t=function t(n){var s=r[n];if(void 0!==s)return s.exports;var o=r[n]={exports:{}};return e[n](o,o.exports,t),o.exports}(452);liscap=t})();